{"version":3,"file":"e0525e89-3ebf6c742b7b3c3b9961.js","mappings":"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","sources":["webpack://gatsby-casper/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport { GatsbyImage, getSrc, getImage } from 'gatsby-plugin-image';\nimport * as _ from 'lodash';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\nimport { AuthorList } from '../components/AuthorList';\n\nexport interface Author {\n  name: string;\n  bio: string;\n  avatar: any;\n}\n\ninterface PageTemplateProps {\n  location: Location;\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: any;\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n      };\n      fields: {\n        readingTime: {\n          text: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      text: string;\n    };\n  };\n  frontmatter: {\n    image: any;\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n}\n\nfunction PageTemplate({ data, pageContext, location }: PageTemplateProps) {\n  const post = data.markdownRemark;\n  let width: number | undefined;\n  let height: number | undefined;\n  if (post.frontmatter.image) {\n    width = getImage(post.frontmatter.image)?.width;\n    height = getImage(post.frontmatter.image)?.height;\n  }\n\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image && (\n          <meta\n            name=\"twitter:image\"\n            content={`${config.siteUrl}${getSrc(post.frontmatter.image)}`}\n          />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author[0].name} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property=\"og:image:width\" content={width?.toString()} />}\n        {height && <meta property=\"og:image:height\" content={height?.toString()} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-full-tags\">\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && config.showAllTags && (\n                    post.frontmatter.tags.map((tag, idx) => (\n                      <React.Fragment key={tag}>\n                        {idx > 0 && (<>, &nbsp;</>)}\n                        <Link to={`/tags/${_.kebabCase(tag)}/`}>{tag}</Link>\n                      </React.Fragment>\n                    ))\n                  )}\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && !config.showAllTags && (\n                    <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                      {post.frontmatter.tags[0]}\n                    </Link>\n                  )}\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <AuthorList authors={post.frontmatter.author} tooltip=\"large\" />\n                    <section className=\"post-full-byline-meta\">\n                      <h4 className=\"author-name\">\n                        {post.frontmatter.author.map(author => (\n                          <Link key={author.name} to={`/author/${_.kebabCase(author.name)}/`}>\n                            {author.name}\n                          </Link>\n                        ))}\n                      </h4>\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span>{post.fields.readingTime.text}\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.image && (\n                <PostFullImage>\n                  <GatsbyImage\n                    image={getImage(post.frontmatter.image)!}\n                    style={{ height: '100%' }}\n                    alt={post.frontmatter.title} />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n}\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px 0 50px;\n  height: 800px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 25px -6vw 50px;\n    border-radius: 0;\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nexport const query = graphql`query ($slug: String, $primaryTag: String) {\n  logo: file(relativePath: {eq: \"img/ghost-logo.png\"}) {\n    childImageSharp {\n      gatsbyImageData(layout: FIXED)\n    }\n  }\n  markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    htmlAst\n    excerpt\n    fields {\n      readingTime {\n        text\n      }\n    }\n    frontmatter {\n      title\n      userDate: date(formatString: \"D MMMM YYYY\")\n      date\n      tags\n      excerpt\n      image {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH)\n        }\n      }\n      author {\n        name\n        bio\n        avatar {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, breakpoints: [40, 80, 120])\n          }\n        }\n      }\n    }\n  }\n  relatedPosts: allMarkdownRemark(\n    filter: {frontmatter: {tags: {in: [$primaryTag]}, draft: {ne: true}}}\n    limit: 5\n    sort: {fields: [frontmatter___date], order: DESC}\n  ) {\n    totalCount\n    edges {\n      node {\n        id\n        excerpt\n        frontmatter {\n          title\n          date\n        }\n        fields {\n          readingTime {\n            text\n          }\n          slug\n        }\n      }\n    }\n  }\n}\n`;\n\nexport default PageTemplate;\n"],"names":["PostTemplate","css","colors","PostFull","NoImage","PostFullHeader","PostFullTags","PostFullCustomExcerpt","lighten","PostFullByline","PostFullTitle","setLightness","PostFullImage","data","pageContext","location","_ref","post","markdownRemark","width","height","frontmatter","image","getImage","_getImage","_getImage2","date","Date","datetime","format","displayDatetime","___EmotionJSX","IndexLayout","className","Helmet","lang","config","title","name","content","excerpt","property","pathname","getSrc","tags","author","_width","toString","_height","Wrapper","outer","SiteNavMain","inner","SiteNav","isPost","id","SiteMain","length","map","tag","idx","React","key","Link","to","_kebabCase","AuthorList","authors","tooltip","dateTime","fields","readingTime","text","GatsbyImage","style","alt","PostContent","htmlAst","Subscribe","ReadNext","currentPageSlug","relatedPosts","Footer"],"sourceRoot":""}